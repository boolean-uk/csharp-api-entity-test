// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using workshop.wwwapi.Data;

#nullable disable

namespace workshop.wwwapi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240910095407_ninthMigration")]
    partial class ninthMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("workshop.wwwapi.Models.Appointment", b =>
                {
                    b.Property<int>("DoctorId")
                        .HasColumnType("integer")
                        .HasColumnName("doctorId");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer")
                        .HasColumnName("patientId");

                    b.Property<DateTime>("Booking")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("booking");

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.HasKey("DoctorId", "PatientId");

                    b.ToTable("appointments");

                    b.HasData(
                        new
                        {
                            DoctorId = 2,
                            PatientId = 1,
                            Booking = new DateTime(2025, 9, 6, 3, 53, 58, 954, DateTimeKind.Utc).AddTicks(8826),
                            Id = 1
                        },
                        new
                        {
                            DoctorId = 2,
                            PatientId = 2,
                            Booking = new DateTime(2025, 3, 13, 20, 52, 21, 954, DateTimeKind.Utc).AddTicks(8914),
                            Id = 2
                        },
                        new
                        {
                            DoctorId = 2,
                            PatientId = 3,
                            Booking = new DateTime(2025, 5, 26, 19, 12, 33, 954, DateTimeKind.Utc).AddTicks(8921),
                            Id = 3
                        },
                        new
                        {
                            DoctorId = 8,
                            PatientId = 4,
                            Booking = new DateTime(2024, 9, 26, 2, 29, 32, 954, DateTimeKind.Utc).AddTicks(8940),
                            Id = 4
                        },
                        new
                        {
                            DoctorId = 3,
                            PatientId = 5,
                            Booking = new DateTime(2025, 7, 5, 12, 2, 2, 954, DateTimeKind.Utc).AddTicks(8944),
                            Id = 5
                        },
                        new
                        {
                            DoctorId = 5,
                            PatientId = 6,
                            Booking = new DateTime(2025, 1, 12, 17, 51, 7, 954, DateTimeKind.Utc).AddTicks(8949),
                            Id = 6
                        },
                        new
                        {
                            DoctorId = 6,
                            PatientId = 7,
                            Booking = new DateTime(2025, 8, 15, 22, 21, 47, 954, DateTimeKind.Utc).AddTicks(8953),
                            Id = 7
                        },
                        new
                        {
                            DoctorId = 1,
                            PatientId = 8,
                            Booking = new DateTime(2025, 6, 2, 16, 45, 14, 954, DateTimeKind.Utc).AddTicks(8957),
                            Id = 8
                        },
                        new
                        {
                            DoctorId = 8,
                            PatientId = 9,
                            Booking = new DateTime(2024, 12, 27, 19, 25, 15, 954, DateTimeKind.Utc).AddTicks(8968),
                            Id = 9
                        },
                        new
                        {
                            DoctorId = 7,
                            PatientId = 10,
                            Booking = new DateTime(2025, 6, 5, 16, 13, 59, 954, DateTimeKind.Utc).AddTicks(8973),
                            Id = 10
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fullName");

                    b.HasKey("Id");

                    b.ToTable("doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Elvis Xavier"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Barack Schwarzenegger"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Felix Winslow"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Neo Mouse"
                        },
                        new
                        {
                            Id = 5,
                            FullName = "Elvis Xavier"
                        },
                        new
                        {
                            Id = 6,
                            FullName = "Oprah Mouse"
                        },
                        new
                        {
                            Id = 7,
                            FullName = "Arnold Schwarzenegger"
                        },
                        new
                        {
                            Id = 8,
                            FullName = "Adam Obama"
                        },
                        new
                        {
                            Id = 9,
                            FullName = "Oprah Duck"
                        },
                        new
                        {
                            Id = 10,
                            FullName = "Mickey Mouse"
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("instructions");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.ToTable("medicines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Instruction = "Mix with chicken noodle soup.",
                            Name = "Super Drugs",
                            Quantity = 31
                        },
                        new
                        {
                            Id = 2,
                            Instruction = "Inject with needle into the bloodstream.",
                            Name = "Super Potion",
                            Quantity = 38
                        },
                        new
                        {
                            Id = 3,
                            Instruction = "Snort before tequila shot.",
                            Name = "Stupid Heroin",
                            Quantity = 68
                        },
                        new
                        {
                            Id = 4,
                            Instruction = "Insert into rectum.",
                            Name = "Not Blue Pills",
                            Quantity = 4
                        },
                        new
                        {
                            Id = 5,
                            Instruction = "Consume with any meal.",
                            Name = "Bad Drugs",
                            Quantity = 94
                        },
                        new
                        {
                            Id = 6,
                            Instruction = "Snort before tequila shot.",
                            Name = "Blazing Potion",
                            Quantity = 19
                        },
                        new
                        {
                            Id = 7,
                            Instruction = "Swallow with water.",
                            Name = "Stupid Leaves",
                            Quantity = 60
                        },
                        new
                        {
                            Id = 8,
                            Instruction = "Chew on it for 3 hours.",
                            Name = "Dangerous Xanax",
                            Quantity = 23
                        },
                        new
                        {
                            Id = 9,
                            Instruction = "Mix with chicken noodle soup.",
                            Name = "Blazing Pills",
                            Quantity = 90
                        },
                        new
                        {
                            Id = 10,
                            Instruction = "Put in coworker's food.",
                            Name = "Yummy Couch drops",
                            Quantity = 14
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fullName");

                    b.HasKey("Id");

                    b.ToTable("patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Charles Xavier"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Ragnar Duck"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Arnold Sandler"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Barack Mouse"
                        },
                        new
                        {
                            Id = 5,
                            FullName = "Charles Schwarzenegger"
                        },
                        new
                        {
                            Id = 6,
                            FullName = "Mickey Winfrey"
                        },
                        new
                        {
                            Id = 7,
                            FullName = "Barack Xavier"
                        },
                        new
                        {
                            Id = 8,
                            FullName = "Arnold Winslow"
                        },
                        new
                        {
                            Id = 9,
                            FullName = "Donald Andersson"
                        },
                        new
                        {
                            Id = 10,
                            FullName = "Donald Mathiasson"
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Prescription", b =>
                {
                    b.Property<int>("appointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("appointmentId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("appointmentId"));

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("appointmentId");

                    b.ToTable("prescriptions");

                    b.HasData(
                        new
                        {
                            appointmentId = 10,
                            Id = 1
                        },
                        new
                        {
                            appointmentId = 9,
                            Id = 2
                        },
                        new
                        {
                            appointmentId = 8,
                            Id = 3
                        },
                        new
                        {
                            appointmentId = 7,
                            Id = 4
                        },
                        new
                        {
                            appointmentId = 6,
                            Id = 5
                        },
                        new
                        {
                            appointmentId = 5,
                            Id = 6
                        },
                        new
                        {
                            appointmentId = 4,
                            Id = 7
                        },
                        new
                        {
                            appointmentId = 3,
                            Id = 8
                        },
                        new
                        {
                            appointmentId = 2,
                            Id = 9
                        },
                        new
                        {
                            appointmentId = 1,
                            Id = 10
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.PrescriptionMedicine", b =>
                {
                    b.Property<int>("PrescriptionId")
                        .HasColumnType("integer")
                        .HasColumnName("prescription_id");

                    b.Property<int>("MedicineId")
                        .HasColumnType("integer")
                        .HasColumnName("medicine_id");

                    b.HasKey("PrescriptionId", "MedicineId");

                    b.HasIndex("MedicineId");

                    b.ToTable("prescription_medicines");

                    b.HasData(
                        new
                        {
                            PrescriptionId = 4,
                            MedicineId = 1
                        },
                        new
                        {
                            PrescriptionId = 5,
                            MedicineId = 1
                        },
                        new
                        {
                            PrescriptionId = 7,
                            MedicineId = 1
                        },
                        new
                        {
                            PrescriptionId = 8,
                            MedicineId = 2
                        },
                        new
                        {
                            PrescriptionId = 6,
                            MedicineId = 2
                        },
                        new
                        {
                            PrescriptionId = 5,
                            MedicineId = 2
                        },
                        new
                        {
                            PrescriptionId = 6,
                            MedicineId = 3
                        },
                        new
                        {
                            PrescriptionId = 1,
                            MedicineId = 3
                        },
                        new
                        {
                            PrescriptionId = 10,
                            MedicineId = 3
                        },
                        new
                        {
                            PrescriptionId = 6,
                            MedicineId = 4
                        },
                        new
                        {
                            PrescriptionId = 7,
                            MedicineId = 4
                        },
                        new
                        {
                            PrescriptionId = 4,
                            MedicineId = 4
                        },
                        new
                        {
                            PrescriptionId = 9,
                            MedicineId = 5
                        },
                        new
                        {
                            PrescriptionId = 6,
                            MedicineId = 5
                        },
                        new
                        {
                            PrescriptionId = 10,
                            MedicineId = 5
                        },
                        new
                        {
                            PrescriptionId = 7,
                            MedicineId = 6
                        },
                        new
                        {
                            PrescriptionId = 1,
                            MedicineId = 6
                        },
                        new
                        {
                            PrescriptionId = 3,
                            MedicineId = 6
                        },
                        new
                        {
                            PrescriptionId = 6,
                            MedicineId = 7
                        },
                        new
                        {
                            PrescriptionId = 10,
                            MedicineId = 7
                        },
                        new
                        {
                            PrescriptionId = 3,
                            MedicineId = 7
                        },
                        new
                        {
                            PrescriptionId = 1,
                            MedicineId = 8
                        },
                        new
                        {
                            PrescriptionId = 9,
                            MedicineId = 8
                        },
                        new
                        {
                            PrescriptionId = 4,
                            MedicineId = 8
                        },
                        new
                        {
                            PrescriptionId = 2,
                            MedicineId = 9
                        },
                        new
                        {
                            PrescriptionId = 3,
                            MedicineId = 9
                        },
                        new
                        {
                            PrescriptionId = 6,
                            MedicineId = 9
                        },
                        new
                        {
                            PrescriptionId = 10,
                            MedicineId = 10
                        },
                        new
                        {
                            PrescriptionId = 7,
                            MedicineId = 10
                        },
                        new
                        {
                            PrescriptionId = 3,
                            MedicineId = 10
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.PrescriptionMedicine", b =>
                {
                    b.HasOne("workshop.wwwapi.Models.Medicine", "Medicine")
                        .WithMany("PrescriptionMedicines")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workshop.wwwapi.Models.Prescription", "Prescription")
                        .WithMany("PrescriptionMedicines")
                        .HasForeignKey("PrescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Medicine", b =>
                {
                    b.Navigation("PrescriptionMedicines");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Prescription", b =>
                {
                    b.Navigation("PrescriptionMedicines");
                });
#pragma warning restore 612, 618
        }
    }
}
