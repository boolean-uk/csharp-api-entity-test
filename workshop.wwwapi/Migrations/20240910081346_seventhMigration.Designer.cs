// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using workshop.wwwapi.Data;

#nullable disable

namespace workshop.wwwapi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240910081346_seventhMigration")]
    partial class seventhMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("workshop.wwwapi.Models.Appointment", b =>
                {
                    b.Property<int>("DoctorId")
                        .HasColumnType("integer")
                        .HasColumnName("doctorId");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer")
                        .HasColumnName("patientId");

                    b.Property<DateTime>("Booking")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("booking");

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.HasKey("DoctorId", "PatientId");

                    b.ToTable("appointments");

                    b.HasData(
                        new
                        {
                            DoctorId = 9,
                            PatientId = 1,
                            Booking = new DateTime(2025, 6, 23, 1, 49, 38, 625, DateTimeKind.Utc).AddTicks(9200),
                            Id = 1
                        },
                        new
                        {
                            DoctorId = 2,
                            PatientId = 2,
                            Booking = new DateTime(2024, 10, 7, 14, 58, 57, 625, DateTimeKind.Utc).AddTicks(9253),
                            Id = 2
                        },
                        new
                        {
                            DoctorId = 7,
                            PatientId = 3,
                            Booking = new DateTime(2025, 6, 20, 11, 53, 12, 625, DateTimeKind.Utc).AddTicks(9259),
                            Id = 3
                        },
                        new
                        {
                            DoctorId = 10,
                            PatientId = 4,
                            Booking = new DateTime(2025, 6, 11, 0, 55, 9, 625, DateTimeKind.Utc).AddTicks(9263),
                            Id = 4
                        },
                        new
                        {
                            DoctorId = 3,
                            PatientId = 5,
                            Booking = new DateTime(2025, 9, 7, 6, 50, 14, 625, DateTimeKind.Utc).AddTicks(9266),
                            Id = 5
                        },
                        new
                        {
                            DoctorId = 6,
                            PatientId = 6,
                            Booking = new DateTime(2025, 6, 26, 9, 39, 5, 625, DateTimeKind.Utc).AddTicks(9270),
                            Id = 6
                        },
                        new
                        {
                            DoctorId = 9,
                            PatientId = 7,
                            Booking = new DateTime(2025, 3, 8, 22, 33, 58, 625, DateTimeKind.Utc).AddTicks(9273),
                            Id = 7
                        },
                        new
                        {
                            DoctorId = 6,
                            PatientId = 8,
                            Booking = new DateTime(2024, 12, 20, 6, 28, 21, 625, DateTimeKind.Utc).AddTicks(9277),
                            Id = 8
                        },
                        new
                        {
                            DoctorId = 7,
                            PatientId = 9,
                            Booking = new DateTime(2024, 9, 22, 14, 35, 19, 625, DateTimeKind.Utc).AddTicks(9280),
                            Id = 9
                        },
                        new
                        {
                            DoctorId = 7,
                            PatientId = 10,
                            Booking = new DateTime(2025, 6, 3, 16, 31, 56, 625, DateTimeKind.Utc).AddTicks(9284),
                            Id = 10
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fullName");

                    b.HasKey("Id");

                    b.ToTable("doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Elvis Winslow"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Elvis Mathiasson"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Adam Duck"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Neo Mouse"
                        },
                        new
                        {
                            Id = 5,
                            FullName = "Neo Schwarzenegger"
                        },
                        new
                        {
                            Id = 6,
                            FullName = "Barack Mathiasson"
                        },
                        new
                        {
                            Id = 7,
                            FullName = "Mickey Duck"
                        },
                        new
                        {
                            Id = 8,
                            FullName = "Adam Duck"
                        },
                        new
                        {
                            Id = 9,
                            FullName = "Felix Obama"
                        },
                        new
                        {
                            Id = 10,
                            FullName = "Donald Winfrey"
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("instructions");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.ToTable("medicines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Instruction = "Put in coworker's food.",
                            Name = "Bad Pills",
                            Quantity = 25
                        },
                        new
                        {
                            Id = 2,
                            Instruction = "Swallow with water.",
                            Name = "Crazy Couch drops",
                            Quantity = 91
                        },
                        new
                        {
                            Id = 3,
                            Instruction = "Snort before tequila shot.",
                            Name = "Stupid Leaves",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            Instruction = "Insert into rectum.",
                            Name = "Ultra Couch drops",
                            Quantity = 14
                        },
                        new
                        {
                            Id = 5,
                            Instruction = "Mix with chicken noodle soup.",
                            Name = "Stupid Aspirin",
                            Quantity = 23
                        },
                        new
                        {
                            Id = 6,
                            Instruction = "Consume with any meal.",
                            Name = "Super Blue Pills",
                            Quantity = 14
                        },
                        new
                        {
                            Id = 7,
                            Instruction = "Mix with chicken noodle soup.",
                            Name = "Crazy Heroin",
                            Quantity = 76
                        },
                        new
                        {
                            Id = 8,
                            Instruction = "Insert into rectum.",
                            Name = "Ultra Heroin",
                            Quantity = 63
                        },
                        new
                        {
                            Id = 9,
                            Instruction = "Hide in cabinet and let the placebo effect do it's job.",
                            Name = "Not Leaves",
                            Quantity = 98
                        },
                        new
                        {
                            Id = 10,
                            Instruction = "Snort before tequila shot.",
                            Name = "Stupid Xanax",
                            Quantity = 93
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fullName");

                    b.HasKey("Id");

                    b.ToTable("patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Kate Schwarzenegger"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Ragnar Obama"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Barack Mouse"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Charles Sandler"
                        },
                        new
                        {
                            Id = 5,
                            FullName = "Elvis Mouse"
                        },
                        new
                        {
                            Id = 6,
                            FullName = "Neo Mouse"
                        },
                        new
                        {
                            Id = 7,
                            FullName = "Elvis Winfrey"
                        },
                        new
                        {
                            Id = 8,
                            FullName = "Neo Xavier"
                        },
                        new
                        {
                            Id = 9,
                            FullName = "Oprah Lothbrok"
                        },
                        new
                        {
                            Id = 10,
                            FullName = "Arnold Mathiasson"
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Prescription", b =>
                {
                    b.Property<int>("appointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("appointmentId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("appointmentId"));

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.HasKey("appointmentId");

                    b.ToTable("prescriptions");

                    b.HasData(
                        new
                        {
                            appointmentId = 10,
                            Id = 1
                        },
                        new
                        {
                            appointmentId = 9,
                            Id = 2
                        },
                        new
                        {
                            appointmentId = 8,
                            Id = 3
                        },
                        new
                        {
                            appointmentId = 7,
                            Id = 4
                        },
                        new
                        {
                            appointmentId = 6,
                            Id = 5
                        },
                        new
                        {
                            appointmentId = 5,
                            Id = 6
                        },
                        new
                        {
                            appointmentId = 4,
                            Id = 7
                        },
                        new
                        {
                            appointmentId = 3,
                            Id = 8
                        },
                        new
                        {
                            appointmentId = 2,
                            Id = 9
                        },
                        new
                        {
                            appointmentId = 1,
                            Id = 10
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.PrescriptionMedicine", b =>
                {
                    b.Property<int>("PrescriptionId")
                        .HasColumnType("integer")
                        .HasColumnName("prescription_id");

                    b.Property<int>("MedicineId")
                        .HasColumnType("integer")
                        .HasColumnName("medicine_id");

                    b.HasKey("PrescriptionId", "MedicineId");

                    b.HasIndex("MedicineId");

                    b.ToTable("prescription_medicines");

                    b.HasData(
                        new
                        {
                            PrescriptionId = 4,
                            MedicineId = 1
                        },
                        new
                        {
                            PrescriptionId = 7,
                            MedicineId = 1
                        },
                        new
                        {
                            PrescriptionId = 10,
                            MedicineId = 1
                        },
                        new
                        {
                            PrescriptionId = 3,
                            MedicineId = 2
                        },
                        new
                        {
                            PrescriptionId = 10,
                            MedicineId = 2
                        },
                        new
                        {
                            PrescriptionId = 5,
                            MedicineId = 2
                        },
                        new
                        {
                            PrescriptionId = 1,
                            MedicineId = 3
                        },
                        new
                        {
                            PrescriptionId = 2,
                            MedicineId = 3
                        },
                        new
                        {
                            PrescriptionId = 4,
                            MedicineId = 3
                        },
                        new
                        {
                            PrescriptionId = 10,
                            MedicineId = 4
                        },
                        new
                        {
                            PrescriptionId = 3,
                            MedicineId = 4
                        },
                        new
                        {
                            PrescriptionId = 1,
                            MedicineId = 4
                        },
                        new
                        {
                            PrescriptionId = 1,
                            MedicineId = 5
                        },
                        new
                        {
                            PrescriptionId = 8,
                            MedicineId = 5
                        },
                        new
                        {
                            PrescriptionId = 5,
                            MedicineId = 5
                        },
                        new
                        {
                            PrescriptionId = 7,
                            MedicineId = 6
                        },
                        new
                        {
                            PrescriptionId = 2,
                            MedicineId = 6
                        },
                        new
                        {
                            PrescriptionId = 9,
                            MedicineId = 6
                        },
                        new
                        {
                            PrescriptionId = 1,
                            MedicineId = 7
                        },
                        new
                        {
                            PrescriptionId = 3,
                            MedicineId = 7
                        },
                        new
                        {
                            PrescriptionId = 6,
                            MedicineId = 7
                        },
                        new
                        {
                            PrescriptionId = 5,
                            MedicineId = 8
                        },
                        new
                        {
                            PrescriptionId = 9,
                            MedicineId = 8
                        },
                        new
                        {
                            PrescriptionId = 1,
                            MedicineId = 8
                        },
                        new
                        {
                            PrescriptionId = 9,
                            MedicineId = 9
                        },
                        new
                        {
                            PrescriptionId = 8,
                            MedicineId = 9
                        },
                        new
                        {
                            PrescriptionId = 6,
                            MedicineId = 9
                        },
                        new
                        {
                            PrescriptionId = 8,
                            MedicineId = 10
                        },
                        new
                        {
                            PrescriptionId = 7,
                            MedicineId = 10
                        },
                        new
                        {
                            PrescriptionId = 10,
                            MedicineId = 10
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.PrescriptionMedicine", b =>
                {
                    b.HasOne("workshop.wwwapi.Models.Medicine", "Medicine")
                        .WithMany("PrescriptionMedicines")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workshop.wwwapi.Models.Prescription", "Prescription")
                        .WithMany("PrescriptionMedicines")
                        .HasForeignKey("PrescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Medicine", b =>
                {
                    b.Navigation("PrescriptionMedicines");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Prescription", b =>
                {
                    b.Navigation("PrescriptionMedicines");
                });
#pragma warning restore 612, 618
        }
    }
}
