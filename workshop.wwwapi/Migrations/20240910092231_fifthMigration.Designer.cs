// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using workshop.wwwapi.Data;

#nullable disable

namespace workshop.wwwapi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240910092231_fifthMigration")]
    partial class fifthMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("workshop.wwwapi.Models.Appointment", b =>
                {
                    b.Property<int>("DoctorId")
                        .HasColumnType("integer")
                        .HasColumnName("doctorId");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer")
                        .HasColumnName("patientId");

                    b.Property<int>("PerscriptionId")
                        .HasColumnType("integer")
                        .HasColumnName("perscriptionId");

                    b.Property<DateTime>("Booking")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("booking");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("DoctorId", "PatientId", "PerscriptionId");

                    b.ToTable("appointments");

                    b.HasData(
                        new
                        {
                            DoctorId = 1,
                            PatientId = 1,
                            PerscriptionId = 1,
                            Booking = new DateTime(2025, 7, 12, 20, 8, 3, 38, DateTimeKind.Utc).AddTicks(5600),
                            Id = 1,
                            Type = 0
                        },
                        new
                        {
                            DoctorId = 1,
                            PatientId = 2,
                            PerscriptionId = 2,
                            Booking = new DateTime(2025, 5, 11, 12, 0, 15, 38, DateTimeKind.Utc).AddTicks(5691),
                            Id = 2,
                            Type = 0
                        },
                        new
                        {
                            DoctorId = 1,
                            PatientId = 3,
                            PerscriptionId = 3,
                            Booking = new DateTime(2024, 9, 22, 20, 58, 6, 38, DateTimeKind.Utc).AddTicks(5696),
                            Id = 3,
                            Type = 1
                        },
                        new
                        {
                            DoctorId = 1,
                            PatientId = 4,
                            PerscriptionId = 4,
                            Booking = new DateTime(2025, 3, 4, 6, 47, 40, 38, DateTimeKind.Utc).AddTicks(5700),
                            Id = 4,
                            Type = 1
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Charles Winslet"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Audrey Jagger"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Mick Windsor"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Jimi Obama"
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("instruction");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.ToTable("medicine");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Instruction = "Apply on your face and then take some alcohol",
                            Name = "Yummy Mold",
                            Quantity = 3
                        },
                        new
                        {
                            Id = 2,
                            Instruction = "Swallow with water",
                            Name = "Bad Paracetamol",
                            Quantity = 5
                        },
                        new
                        {
                            Id = 3,
                            Instruction = "Inject into arm and then take some air",
                            Name = "Dangerous Drugs",
                            Quantity = 7
                        },
                        new
                        {
                            Id = 4,
                            Instruction = "Eat with air",
                            Name = "Super Drugs",
                            Quantity = 9
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Kate Winslet"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Audrey Winfrey"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Elvis Winslet"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Mick Trump"
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Perscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("perscription");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        },
                        new
                        {
                            Id = 3
                        },
                        new
                        {
                            Id = 4
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.PerscriptionMedicine", b =>
                {
                    b.Property<int>("MedicineId")
                        .HasColumnType("integer")
                        .HasColumnName("medicineId");

                    b.Property<int>("PerscriptionId")
                        .HasColumnType("integer")
                        .HasColumnName("perscriptionId");

                    b.HasKey("MedicineId", "PerscriptionId");

                    b.HasIndex("PerscriptionId");

                    b.ToTable("perscriptionMedicines");

                    b.HasData(
                        new
                        {
                            MedicineId = 1,
                            PerscriptionId = 1
                        },
                        new
                        {
                            MedicineId = 1,
                            PerscriptionId = 3
                        },
                        new
                        {
                            MedicineId = 2,
                            PerscriptionId = 4
                        },
                        new
                        {
                            MedicineId = 2,
                            PerscriptionId = 2
                        },
                        new
                        {
                            MedicineId = 3,
                            PerscriptionId = 3
                        },
                        new
                        {
                            MedicineId = 3,
                            PerscriptionId = 2
                        },
                        new
                        {
                            MedicineId = 4,
                            PerscriptionId = 1
                        },
                        new
                        {
                            MedicineId = 4,
                            PerscriptionId = 4
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.PerscriptionMedicine", b =>
                {
                    b.HasOne("workshop.wwwapi.Models.Medicine", "Medicine")
                        .WithMany("PerscriptionMedicines")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workshop.wwwapi.Models.Perscription", "Perscription")
                        .WithMany("PerscriptionMedicines")
                        .HasForeignKey("PerscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("Perscription");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Medicine", b =>
                {
                    b.Navigation("PerscriptionMedicines");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Perscription", b =>
                {
                    b.Navigation("PerscriptionMedicines");
                });
#pragma warning restore 612, 618
        }
    }
}
