// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using workshop.wwwapi.Data;

#nullable disable

namespace workshop.wwwapi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("workshop.wwwapi.Models.Appointment", b =>
                {
                    b.Property<string>("Booking")
                        .HasColumnType("text")
                        .HasColumnName("bookings");

                    b.Property<int>("DoctorId")
                        .HasColumnType("integer");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.HasKey("Booking", "DoctorId", "PatientId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("appointments");

                    b.HasData(
                        new
                        {
                            Booking = "2024-01-31",
                            DoctorId = 1,
                            PatientId = 1
                        },
                        new
                        {
                            Booking = "2024-01-31",
                            DoctorId = 1,
                            PatientId = 4
                        },
                        new
                        {
                            Booking = "2024-01-31",
                            DoctorId = 2,
                            PatientId = 2
                        },
                        new
                        {
                            Booking = "2024-01-31",
                            DoctorId = 2,
                            PatientId = 6
                        },
                        new
                        {
                            Booking = "2024-01-31",
                            DoctorId = 3,
                            PatientId = 3
                        },
                        new
                        {
                            Booking = "2024-01-31",
                            DoctorId = 3,
                            PatientId = 5
                        },
                        new
                        {
                            Booking = "2024-01-31",
                            DoctorId = 3,
                            PatientId = 7
                        },
                        new
                        {
                            Booking = "2024-01-31",
                            DoctorId = 3,
                            PatientId = 8
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("doctor_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("doctor_full_name");

                    b.HasKey("Id");

                    b.ToTable("doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Doktor Docktorsson"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Jöran Jöransson"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Filip Filipsson"
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("patient_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("patient_full_name");

                    b.HasKey("Id");

                    b.ToTable("patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Johan Johansson"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Sven Svensson"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Anders Andresson"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Erik Eriksson"
                        },
                        new
                        {
                            Id = 5,
                            FullName = "Emma Eriksson"
                        },
                        new
                        {
                            Id = 6,
                            FullName = "Knut Knutsson"
                        },
                        new
                        {
                            Id = 7,
                            FullName = "Bengt Bengtsson"
                        },
                        new
                        {
                            Id = 8,
                            FullName = "Jesper Jespersson"
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Appointment", b =>
                {
                    b.HasOne("workshop.wwwapi.Models.Doctor", null)
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workshop.wwwapi.Models.Patient", null)
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Doctor", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Patient", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
