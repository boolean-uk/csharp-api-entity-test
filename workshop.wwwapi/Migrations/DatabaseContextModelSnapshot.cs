// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using workshop.wwwapi.Data;

#nullable disable

namespace workshop.wwwapi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MedicinePrescription", b =>
                {
                    b.Property<int>("MedicinesId")
                        .HasColumnType("integer");

                    b.Property<int>("PrescriptionsId")
                        .HasColumnType("integer");

                    b.HasKey("MedicinesId", "PrescriptionsId");

                    b.HasIndex("PrescriptionsId");

                    b.ToTable("PrescriptionMedicines", (string)null);
                });

            modelBuilder.Entity("Prescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AppointmentBooking")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("AppointmentDoctorId")
                        .HasColumnType("integer");

                    b.Property<int?>("AppointmentPatientId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentBooking", "AppointmentPatientId", "AppointmentDoctorId");

                    b.ToTable("prescriptions");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Appointment", b =>
                {
                    b.Property<DateTime>("Booking")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("booking");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer")
                        .HasColumnName("patient_id");

                    b.Property<int>("DoctorId")
                        .HasColumnType("integer")
                        .HasColumnName("doctor_id");

                    b.Property<int?>("PrescriptionId")
                        .HasColumnType("integer")
                        .HasColumnName("prescription_id");

                    b.HasKey("Booking", "PatientId", "DoctorId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("appointments");

                    b.HasData(
                        new
                        {
                            Booking = new DateTime(2024, 2, 8, 12, 36, 55, 15, DateTimeKind.Utc).AddTicks(2412),
                            PatientId = 1,
                            DoctorId = 1
                        },
                        new
                        {
                            Booking = new DateTime(2024, 2, 8, 12, 36, 55, 15, DateTimeKind.Utc).AddTicks(2412),
                            PatientId = 2,
                            DoctorId = 1
                        },
                        new
                        {
                            Booking = new DateTime(2024, 2, 8, 13, 36, 55, 15, DateTimeKind.Utc).AddTicks(2412),
                            PatientId = 1,
                            DoctorId = 3
                        },
                        new
                        {
                            Booking = new DateTime(2024, 2, 8, 14, 6, 55, 15, DateTimeKind.Utc).AddTicks(2412),
                            PatientId = 2,
                            DoctorId = 1
                        },
                        new
                        {
                            Booking = new DateTime(2024, 2, 8, 14, 36, 55, 15, DateTimeKind.Utc).AddTicks(2412),
                            PatientId = 1,
                            DoctorId = 2
                        },
                        new
                        {
                            Booking = new DateTime(2024, 2, 8, 15, 6, 55, 15, DateTimeKind.Utc).AddTicks(2412),
                            PatientId = 3,
                            DoctorId = 3
                        },
                        new
                        {
                            Booking = new DateTime(2024, 2, 8, 15, 36, 55, 15, DateTimeKind.Utc).AddTicks(2412),
                            PatientId = 2,
                            DoctorId = 2
                        },
                        new
                        {
                            Booking = new DateTime(2024, 2, 8, 16, 6, 55, 15, DateTimeKind.Utc).AddTicks(2412),
                            PatientId = 3,
                            DoctorId = 2
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Doctor Phil"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Doctor Jim"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Doctor R2D2"
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("instructions");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.ToTable("medicines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Instructions = "Take with water",
                            Name = "Medicine A",
                            Quantity = 10
                        },
                        new
                        {
                            Id = 2,
                            Instructions = "Take before meals",
                            Name = "Medicine B",
                            Quantity = 20
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Nigel"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "AJ"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Kevin"
                        });
                });

            modelBuilder.Entity("MedicinePrescription", b =>
                {
                    b.HasOne("workshop.wwwapi.Models.Medicine", null)
                        .WithMany()
                        .HasForeignKey("MedicinesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prescription", null)
                        .WithMany()
                        .HasForeignKey("PrescriptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Prescription", b =>
                {
                    b.HasOne("workshop.wwwapi.Models.Appointment", null)
                        .WithMany("Prescriptions")
                        .HasForeignKey("AppointmentBooking", "AppointmentPatientId", "AppointmentDoctorId");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Appointment", b =>
                {
                    b.HasOne("workshop.wwwapi.Models.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workshop.wwwapi.Models.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Appointment", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Doctor", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Patient", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
