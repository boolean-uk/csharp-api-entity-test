// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using workshop.wwwapi.Data;

#nullable disable

namespace workshop.wwwapi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240910081046_sixthMigration")]
    partial class sixthMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("workshop.wwwapi.Models.Appointment", b =>
                {
                    b.Property<int>("DoctorId")
                        .HasColumnType("integer")
                        .HasColumnName("doctorId");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer")
                        .HasColumnName("patientId");

                    b.Property<DateTime>("Booking")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("booking");

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.HasKey("DoctorId", "PatientId");

                    b.ToTable("appointments");

                    b.HasData(
                        new
                        {
                            DoctorId = 9,
                            PatientId = 1,
                            Booking = new DateTime(2024, 12, 27, 22, 59, 38, 248, DateTimeKind.Utc).AddTicks(2908),
                            Id = 1
                        },
                        new
                        {
                            DoctorId = 1,
                            PatientId = 2,
                            Booking = new DateTime(2025, 8, 7, 21, 14, 37, 248, DateTimeKind.Utc).AddTicks(3014),
                            Id = 2
                        },
                        new
                        {
                            DoctorId = 6,
                            PatientId = 3,
                            Booking = new DateTime(2025, 6, 23, 14, 50, 17, 248, DateTimeKind.Utc).AddTicks(3037),
                            Id = 3
                        },
                        new
                        {
                            DoctorId = 7,
                            PatientId = 4,
                            Booking = new DateTime(2024, 10, 19, 4, 20, 49, 248, DateTimeKind.Utc).AddTicks(3047),
                            Id = 4
                        },
                        new
                        {
                            DoctorId = 5,
                            PatientId = 5,
                            Booking = new DateTime(2025, 5, 14, 2, 58, 28, 248, DateTimeKind.Utc).AddTicks(3086),
                            Id = 5
                        },
                        new
                        {
                            DoctorId = 8,
                            PatientId = 6,
                            Booking = new DateTime(2025, 4, 18, 14, 12, 57, 248, DateTimeKind.Utc).AddTicks(3095),
                            Id = 6
                        },
                        new
                        {
                            DoctorId = 3,
                            PatientId = 7,
                            Booking = new DateTime(2024, 11, 6, 16, 31, 31, 248, DateTimeKind.Utc).AddTicks(3099),
                            Id = 7
                        },
                        new
                        {
                            DoctorId = 7,
                            PatientId = 8,
                            Booking = new DateTime(2025, 2, 2, 23, 52, 32, 248, DateTimeKind.Utc).AddTicks(3102),
                            Id = 8
                        },
                        new
                        {
                            DoctorId = 8,
                            PatientId = 9,
                            Booking = new DateTime(2025, 5, 19, 2, 33, 43, 248, DateTimeKind.Utc).AddTicks(3106),
                            Id = 9
                        },
                        new
                        {
                            DoctorId = 2,
                            PatientId = 10,
                            Booking = new DateTime(2025, 8, 17, 13, 38, 23, 248, DateTimeKind.Utc).AddTicks(3110),
                            Id = 10
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fullName");

                    b.HasKey("Id");

                    b.ToTable("doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Arnold Xavier"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Adam Obama"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Barack Obama"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Felix Sandler"
                        },
                        new
                        {
                            Id = 5,
                            FullName = "Barack Winslow"
                        },
                        new
                        {
                            Id = 6,
                            FullName = "Donald Sandler"
                        },
                        new
                        {
                            Id = 7,
                            FullName = "Donald Lothbrok"
                        },
                        new
                        {
                            Id = 8,
                            FullName = "Elvis Lothbrok"
                        },
                        new
                        {
                            Id = 9,
                            FullName = "Arnold Schwarzenegger"
                        },
                        new
                        {
                            Id = 10,
                            FullName = "Mickey Duck"
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("instructions");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.ToTable("medicines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Instruction = "Put in coworker's food.",
                            Name = "Ultra Couch drops",
                            Quantity = 58
                        },
                        new
                        {
                            Id = 2,
                            Instruction = "Swallow with water.",
                            Name = "Stupid Blue Pills",
                            Quantity = 83
                        },
                        new
                        {
                            Id = 3,
                            Instruction = "Mix with chicken noodle soup.",
                            Name = "Crazy Xanax",
                            Quantity = 7
                        },
                        new
                        {
                            Id = 4,
                            Instruction = "Swallow with water.",
                            Name = "Dangerous Laxatives",
                            Quantity = 33
                        },
                        new
                        {
                            Id = 5,
                            Instruction = "Insert into rectum.",
                            Name = "Yummy Mushrooms",
                            Quantity = 6
                        },
                        new
                        {
                            Id = 6,
                            Instruction = "Consume with any meal.",
                            Name = "Yummy Leaves",
                            Quantity = 45
                        },
                        new
                        {
                            Id = 7,
                            Instruction = "Snort before tequila shot.",
                            Name = "Good Couch drops",
                            Quantity = 80
                        },
                        new
                        {
                            Id = 8,
                            Instruction = "Chew on it for 3 hours.",
                            Name = "Ultra Leaves",
                            Quantity = 60
                        },
                        new
                        {
                            Id = 9,
                            Instruction = "Disolve into drink of your choice.",
                            Name = "Dangerous Leaves",
                            Quantity = 80
                        },
                        new
                        {
                            Id = 10,
                            Instruction = "Chew on it for 3 hours.",
                            Name = "Yummy Leaves",
                            Quantity = 28
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fullName");

                    b.HasKey("Id");

                    b.ToTable("patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Felix Schwarzenegger"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Arnold Mouse"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Felix Obama"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Neo Winslow"
                        },
                        new
                        {
                            Id = 5,
                            FullName = "Elvis Andersson"
                        },
                        new
                        {
                            Id = 6,
                            FullName = "Donald Sandler"
                        },
                        new
                        {
                            Id = 7,
                            FullName = "Ragnar Xavier"
                        },
                        new
                        {
                            Id = 8,
                            FullName = "Barack Mouse"
                        },
                        new
                        {
                            Id = 9,
                            FullName = "Barack Presley"
                        },
                        new
                        {
                            Id = 10,
                            FullName = "Felix Lothbrok"
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Prescription", b =>
                {
                    b.Property<int>("appointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("appointmentId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("appointmentId"));

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.HasKey("appointmentId");

                    b.ToTable("prescriptions");

                    b.HasData(
                        new
                        {
                            appointmentId = 10,
                            Id = 1
                        },
                        new
                        {
                            appointmentId = 9,
                            Id = 2
                        },
                        new
                        {
                            appointmentId = 8,
                            Id = 3
                        },
                        new
                        {
                            appointmentId = 7,
                            Id = 4
                        },
                        new
                        {
                            appointmentId = 6,
                            Id = 5
                        },
                        new
                        {
                            appointmentId = 5,
                            Id = 6
                        },
                        new
                        {
                            appointmentId = 4,
                            Id = 7
                        },
                        new
                        {
                            appointmentId = 3,
                            Id = 8
                        },
                        new
                        {
                            appointmentId = 2,
                            Id = 9
                        },
                        new
                        {
                            appointmentId = 1,
                            Id = 10
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.PrescriptionMedicine", b =>
                {
                    b.Property<int>("PrescriptionId")
                        .HasColumnType("integer")
                        .HasColumnName("prescription_id");

                    b.Property<int>("MedicineId")
                        .HasColumnType("integer")
                        .HasColumnName("medicine_id");

                    b.HasKey("PrescriptionId", "MedicineId");

                    b.HasIndex("MedicineId");

                    b.ToTable("prescription_medicines");

                    b.HasData(
                        new
                        {
                            PrescriptionId = 3,
                            MedicineId = 1
                        },
                        new
                        {
                            PrescriptionId = 5,
                            MedicineId = 1
                        },
                        new
                        {
                            PrescriptionId = 4,
                            MedicineId = 1
                        },
                        new
                        {
                            PrescriptionId = 2,
                            MedicineId = 2
                        },
                        new
                        {
                            PrescriptionId = 9,
                            MedicineId = 2
                        },
                        new
                        {
                            PrescriptionId = 4,
                            MedicineId = 2
                        },
                        new
                        {
                            PrescriptionId = 2,
                            MedicineId = 3
                        },
                        new
                        {
                            PrescriptionId = 4,
                            MedicineId = 3
                        },
                        new
                        {
                            PrescriptionId = 9,
                            MedicineId = 3
                        },
                        new
                        {
                            PrescriptionId = 7,
                            MedicineId = 4
                        },
                        new
                        {
                            PrescriptionId = 6,
                            MedicineId = 4
                        },
                        new
                        {
                            PrescriptionId = 2,
                            MedicineId = 4
                        },
                        new
                        {
                            PrescriptionId = 2,
                            MedicineId = 5
                        },
                        new
                        {
                            PrescriptionId = 7,
                            MedicineId = 5
                        },
                        new
                        {
                            PrescriptionId = 9,
                            MedicineId = 5
                        },
                        new
                        {
                            PrescriptionId = 8,
                            MedicineId = 6
                        },
                        new
                        {
                            PrescriptionId = 9,
                            MedicineId = 6
                        },
                        new
                        {
                            PrescriptionId = 5,
                            MedicineId = 6
                        },
                        new
                        {
                            PrescriptionId = 8,
                            MedicineId = 7
                        },
                        new
                        {
                            PrescriptionId = 9,
                            MedicineId = 7
                        },
                        new
                        {
                            PrescriptionId = 2,
                            MedicineId = 7
                        },
                        new
                        {
                            PrescriptionId = 7,
                            MedicineId = 8
                        },
                        new
                        {
                            PrescriptionId = 5,
                            MedicineId = 8
                        },
                        new
                        {
                            PrescriptionId = 6,
                            MedicineId = 8
                        },
                        new
                        {
                            PrescriptionId = 8,
                            MedicineId = 9
                        },
                        new
                        {
                            PrescriptionId = 1,
                            MedicineId = 9
                        },
                        new
                        {
                            PrescriptionId = 10,
                            MedicineId = 9
                        },
                        new
                        {
                            PrescriptionId = 2,
                            MedicineId = 10
                        },
                        new
                        {
                            PrescriptionId = 8,
                            MedicineId = 10
                        },
                        new
                        {
                            PrescriptionId = 10,
                            MedicineId = 10
                        });
                });

            modelBuilder.Entity("workshop.wwwapi.Models.PrescriptionMedicine", b =>
                {
                    b.HasOne("workshop.wwwapi.Models.Medicine", "Medicine")
                        .WithMany("PrescriptionMedicines")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workshop.wwwapi.Models.Prescription", "Prescription")
                        .WithMany("PrescriptionMedicines")
                        .HasForeignKey("PrescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Medicine", b =>
                {
                    b.Navigation("PrescriptionMedicines");
                });

            modelBuilder.Entity("workshop.wwwapi.Models.Prescription", b =>
                {
                    b.Navigation("PrescriptionMedicines");
                });
#pragma warning restore 612, 618
        }
    }
}
